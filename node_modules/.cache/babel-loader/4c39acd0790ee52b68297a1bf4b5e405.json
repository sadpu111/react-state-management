{"ast":null,"code":"var _jsxFileName = \"/Users/kimwoohyuk/Desktop/Nomad Coders/react-master-class/crypto-tracker/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport BrowserRouter from \"./Router\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GlobalStyle = createGlobalStyle` // 전역 style component. 적용하려면 컴포넌트에 추가하여 리턴. 아래 내용은 Reser css로 모든 스타일을 제거한 코드. \n// \"https://github.com/zacanger/styled-reset/blob/master/src/index.ts\"\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n} \n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: ${props => props.theme.bgColor}; // index에서 themeProcider 안에 App이 있으므로 여기(App)에서 theme의 props에 접근이 가능하다. \n  color: ${props => props.theme.textColor}; \n}\na {\n  text-decoration: none;\n  color: inherit;\n}\n`; // <></> 는 fragment로 빈 태그(유령태그)이다. 원칙적으로는 단 하나의 element를 리턴해야하므로, <GlobalStyle /> 까지 포함하여 리턴하려면 원래는 <div>태그로 묶어야하지만, 그럴 경우 <div>태그가 너무 남발되어 비효율적. 그래서 fragment라는 유령태그로 감싸준다.\n\n_c = GlobalStyle;\n\nfunction App() {\n  _s();\n\n  const [isDark, setDark] = useState(false);\n\n  const toggleDark = () => setDark(current => !current);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: isDark ? darkTheme : lightTheme,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleDark,\n        children: \"Toggle dark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BrowserRouter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"TTXaOfHfIAft/KK3gl2BP6a8ay4=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GlobalStyle\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","createGlobalStyle","ThemeProvider","BrowserRouter","darkTheme","lightTheme","GlobalStyle","props","theme","bgColor","textColor","App","isDark","setDark","toggleDark","current"],"sources":["/Users/kimwoohyuk/Desktop/Nomad Coders/react-master-class/crypto-tracker/src/App.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport BrowserRouter from \"./Router\";\nimport { darkTheme, lightTheme } from \"./theme\";\n\nconst GlobalStyle = createGlobalStyle` // 전역 style component. 적용하려면 컴포넌트에 추가하여 리턴. 아래 내용은 Reser css로 모든 스타일을 제거한 코드. \n// \"https://github.com/zacanger/styled-reset/blob/master/src/index.ts\"\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n} \n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: ${(props) => props.theme.bgColor}; // index에서 themeProcider 안에 App이 있으므로 여기(App)에서 theme의 props에 접근이 가능하다. \n  color: ${(props) => props.theme.textColor}; \n}\na {\n  text-decoration: none;\n  color: inherit;\n}\n`;\n\n// <></> 는 fragment로 빈 태그(유령태그)이다. 원칙적으로는 단 하나의 element를 리턴해야하므로, <GlobalStyle /> 까지 포함하여 리턴하려면 원래는 <div>태그로 묶어야하지만, 그럴 경우 <div>태그가 너무 남발되어 비효율적. 그래서 fragment라는 유령태그로 감싸준다.\nfunction App() {\n  const [isDark, setDark] = useState(false);\n  const toggleDark = () => setDark((current) =>  !current);\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <button onClick={toggleDark}>Toggle dark</button>\n        <GlobalStyle />\n        <BrowserRouter />\n      </ThemeProvider>\n    </>\n  )\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,iBAAT,EAA4BC,aAA5B,QAAiD,mBAAjD;AACA,OAAOC,aAAP,MAA0B,UAA1B;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,SAAtC;;;AAEA,MAAMC,WAAW,GAAGL,iBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAuBM,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,OAAQ;AACrD,WAAYF,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYE,SAAU;AAC5C;AACA;AACA;AACA;AACA;AACA,CA9DA,C,CAgEA;;KAhEMJ,W;;AAiEN,SAASK,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,MAAD,EAASC,OAAT,IAAoBb,QAAQ,CAAC,KAAD,CAAlC;;EACA,MAAMc,UAAU,GAAG,MAAMD,OAAO,CAAEE,OAAD,IAAc,CAACA,OAAhB,CAAhC;;EACA,oBACE;IAAA,uBACE,QAAC,aAAD;MAAe,KAAK,EAAEH,MAAM,GAAGR,SAAH,GAAeC,UAA3C;MAAA,wBACE;QAAQ,OAAO,EAAES,UAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,WAAD;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,aAAD;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AASD;;GAZQH,G;;MAAAA,G;AAcT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}